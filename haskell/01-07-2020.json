{
  "repositories": [
    {
      "author": "koalaman",
      "name": "shellcheck",
      "href": "https://github.com/koalaman/shellcheck",
      "description": "ShellCheck, a static analysis tool for shell scripts",
      "language": "Haskell",
      "stars": 0,
      "forks": 1048,
      "starsInPeriod": 22
    },
    {
      "author": "SimulaVR",
      "name": "Simula",
      "href": "https://github.com/SimulaVR/Simula",
      "description": "Linux VR Desktop",
      "language": "Haskell",
      "stars": 0,
      "forks": 32,
      "starsInPeriod": 17
    },
    {
      "author": "jgm",
      "name": "pandoc",
      "href": "https://github.com/jgm/pandoc",
      "description": "Universal markup converter",
      "language": "Haskell",
      "stars": 0,
      "forks": 2357,
      "starsInPeriod": 15
    },
    {
      "author": "hadolint",
      "name": "hadolint",
      "href": "https://github.com/hadolint/hadolint",
      "description": "Dockerfile linter, validate inline bash, written in Haskell",
      "language": "Haskell",
      "stars": 0,
      "forks": 160,
      "starsInPeriod": 4
    },
    {
      "author": "elm",
      "name": "compiler",
      "href": "https://github.com/elm/compiler",
      "description": "Compiler for Elm, a functional language for reliable webapps.",
      "language": "Haskell",
      "stars": 0,
      "forks": 516,
      "starsInPeriod": 4
    },
    {
      "author": "input-output-hk",
      "name": "cardano-node",
      "href": "https://github.com/input-output-hk/cardano-node",
      "description": "The core component that is used to participate in a Cardano decentralised blockchain.",
      "language": "Haskell",
      "stars": 0,
      "forks": 65,
      "starsInPeriod": 3
    },
    {
      "author": "github",
      "name": "semantic",
      "href": "https://github.com/github/semantic",
      "description": "Parsing, analyzing, and comparing source code across many languages",
      "language": "Haskell",
      "stars": 0,
      "forks": 386,
      "starsInPeriod": 3
    }
  ]
}